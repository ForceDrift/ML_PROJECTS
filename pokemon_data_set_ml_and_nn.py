# -*- coding: utf-8 -*-
"""Pokemon Data Set ML and NN

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hKQMx8R3a0pcG5kw59zue0obabP-EB73
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

data = pd.read_csv('Pokemon.csv')
data.dropna(inplace = True)

print(data.head())
plt.plot(data['HP'],data['Attack']) #shows correlation
plt.show()

x = data[['HP']]
y = data[['Attack']]

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2, random_state = 0)
model = LinearRegression()
model.fit(x,y)

hp_val = np.array([[21]])
pred = model.predict(hp_val)
print(f"if hp = {hp_val[0][0]} then attack_dmg = {pred[0][0]}" )


y_pred = model.predict(x_test)
plt.scatter(x_test, y_test, color='blue', label='Actual data points')
plt.plot(x_test, y_pred, color='red', linewidth=2, label='Regression line')
plt.xlabel('HP')
plt.ylabel('Attack')
plt.title('Pokemon HP VS Attack DMG')
plt.legend()
plt.show()

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

model = keras.Sequential([
    layers.Dense(64, activation='relu', input_shape=[1]),
    layers.Dense(64, activation='relu'),
    layers.Dense(1)
])

model.compile(optimizer='adam', loss='mean_squared_error')

model.fit(x_train, y_train, epochs=100, batch_size=4)

loss = model.evaluate(x_test, y_test)
print(" mse:", loss)

y_pred_nn = model.predict(x_test)

plt.scatter(x_test, y_test, color='blue', label='Actual data points')
plt.plot(x_test, y_pred_nn, color='red', label='NN', linewidth=2)
plt.xlabel('HP')
plt.ylabel('Attack')
plt.title('Pokemon HP VS Attack DMG (Neural Network)')
plt.legend()
plt.show()